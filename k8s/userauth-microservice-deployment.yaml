apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-microservice
  namespace: twitch
  labels:
    app: auth-microservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-microservice
  template:
    metadata:
      name: auth-microservice
      labels:
        app: auth-microservice
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "auth-role"
        vault.hashicorp.com/agent-inject-token: "true"
        vault.hashicorp.com/agent-inject-secret-application.properties: "secret/data/auth"
        vault.hashicorp.com/agent-inject-template-application.properties: |
          {{- with secret "secret/data/auth" -}}
          user.management.api.base-url={{ .Data.data.USER_MANAGEMENT_API_BASE_URL }}
          server.port={{ .Data.data.SERVER_PORT }}
          jwt.secret={{ .Data.data.JWT_SECRET }}
          jwt.internal={{ .Data.data.JWT_INTERNAL }}
          {{- end }}
    spec:
      containers:
        - name: auth-microservice
          image: killerquen69/userauth:1
          imagePullPolicy: Always
          env:
            - name: SPRING_CONFIG_ADDITIONAL_LOCATION
              value: "/vault/secrets/"
          ports:
            - containerPort: 8090
              protocol: TCP
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: auth-microservice-service
  namespace: twitch
  labels:
    app: auth-microservice-service
spec:
  type: ClusterIP
  selector:
    app: auth-microservice
  ports:
    - port: 8090
      targetPort: 8090