apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: twitch
data:
  database: channels

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-channels
  namespace: twitch
spec:
  clusterIP: None
  ports:
    - port: 5432
      name: postgres
  selector:
    app: postgres-channels

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-channels
  namespace: twitch
spec:
  serviceName: "postgres-channels"
  replicas: 1
  selector:
    matchLabels:
      app: postgres-channels
  template:
    metadata:
      labels:
        app: postgres-channels
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "channels-role"
        vault.hashicorp.com/agent-inject-token: "true"
        vault.hashicorp.com/agent-inject-secret-application.properties: "secret/data/channels"
        vault.hashicorp.com/agent-inject-template-application.properties: |
          {{- with secret "secret/data/channels" -}}
          POSTGRES_USER={{ .Data.data.DATASOURCE_USERNAME }}
          POSTGRES_PASSWORD={{ .Data.data.DATASOURCE_PASSWORD }}
          POSTGRES_DB={{ .Data.data.DATASOURCE_NAME }}
          {{- end }}
    spec:
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_USER_FILE
              value: "/vault/secrets/application.properties"
            - name: POSTGRES_PASSWORD_FILE
              value: "/vault/secrets/application.properties"
            - name: POSTGRES_DB_FILE
              value: "/vault/secrets/application.properties"
          volumeMounts:
            - name: postgres-channels
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-channels
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi