pipeline {
   agent any
   triggers {
      pollSCM('*/1 * * * *')
   }
   environment{
          DOCKER_IMAGE = 'userAuth'
          DOCKER_TAG = "${env.BUILD_NUMBER}"
          DOCKER_REPO = 'killerquen69'

   }
   stages {
      stage('build stage') {
        when {
           changeset "userAuth-microservice/**"
        }
        agent{
          docker {
             image 'gradle:8.14.0-jdk17'
          }
        }
        steps {
           dir('userAuth-microservice') {
               sh 'gradle build -x test'
           }
        }
      }
      stage ('sca ') {
         when {
            changeset "userAuth-microservice/**"
         }
         steps {
            dir('userAuth-microservice') {
               dependencyCheck additionalArguments: '--format HTML', nvdCredentialsId: 'owasp', odcInstallation: 'DP-Check'
            }
         }
      }
      stage('package stage') {
        when {
           changeset "userAuth-microservice/**"
        }
        agent {
          docker {
             image 'docker:24.0-cli'
             args '--entrypoint="" --user root -v /var/run/docker.sock:/var/run/docker.sock'
          }
        }
        steps{
           dir('userAuth-microservice') {
              sh 'docker build -t $DOCKER_REPO/$DOCKER_IMAGE:$DOCKER_TAG .'
           }

        }
      }
      stage('scan stage') {
         when {
            changeset "userAuth-microservice/**"
         }
         agent {
            docker {
              image 'aquasec/trivy'
              args '--entrypoint="" --user root -v /var/run/docker.sock:/var/run/docker.sock'
            }
         }
         steps {
            dir('userAuth-microservice') {
                sh 'trivy image --no-progress --severity HIGH,CRITICAL --skip-files "*.jar" --timeout 20m $DOCKER_REPO/$DOCKER_IMAGE:$DOCKER_TAG'
            }
         }
      }
      stage('push stage') {
         when {
            changeset "userAuth-microservice/**"
         }
         agent {
            docker {
               image 'docker:24.0-cli'
               args '--entrypoint="" --user root -v /var/run/docker.sock:/var/run/docker.sock'
            }
         }
         steps {
             dir('userAuth-microservice') {

                withCredentials([usernamePassword(credentialsId: 'killerquen69', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh '''
                       echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

                       docker push $DOCKER_USERNAME/$DOCKER_IMAGE:$DOCKER_TAG
                       '''
                }

             }

         }

      }
      stage ('deployment stage') {
                when {
                   changeset "userAuth-microservice/**"
                }
                steps {


                      withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {

                                sh '''
                                   git config --global user.email "hamza.elmalki1234@gmail.com"
                                   git config --global user.name "Hamzacherkaouiel"
                                   git config --global pull.rebase false
                                   git checkout master
                                   git pull origin master

                                   cd k8s
                                   sed -i "s|image: $DOCKER_REPO/$DOCKER_IMAGE:[^ ]*|image: $DOCKER_REPO/$DOCKER_IMAGE:$DOCKER_TAG|g" userAuth-microservice-deployment.yaml
                                   cat userAuth-microservice-deployment.yaml
                                   git add .
                                   git commit -m "update manifest"
                                   git remote set-url origin https://$GIT_USERNAME:$GIT_PASSWORD@github.com/simoait02/PFA-INE2-ASEDS.git
                                   git push -u origin master
                                   '''
                      }



                }

      }
   }
}